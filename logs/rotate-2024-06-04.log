{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"error","message":"\nInvalid `prisma.user.findMany()` invocation:\n\n\nerror: Environment variable not found: DATABASE_URL."}
{"content_length":"129","label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":15.392,"status":500,"url":"/alumini/api/v1/testapi"}
{"label":"Exact health api logs","level":"error","message":"Not found"}
{"content_length":"34","label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":0.701,"status":404,"url":"/favicon.ico"}
{"label":"Exact health api logs","level":"error","message":"\nInvalid `prisma.user.findMany()` invocation:\n\n\nerror: Environment variable not found: DATABASE_URL."}
{"content_length":"129","label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":4.535,"status":500,"url":"/alumini/api/v1/testapi"}
{"label":"Exact health api logs","level":"error","message":"\nInvalid `prisma.user.findMany()` invocation:\n\n\nerror: Environment variable not found: DATABASE_URL."}
{"content_length":"129","label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":3.411,"status":500,"url":"/alumini/api/v1/testapi"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"content_length":"2","label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2601.113,"status":200,"url":"/alumini/api/v1/testapi"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"clientVersion":"5.8.1","label":"Exact health api logs","level":"error","message":"\nInvalid `prisma.user.findMany()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/UserDB.js:64:45\n\n  61    \n  62 return new Promise(async (resolve, reject) => {\n  63     try {\n→ 64         const users = await prisma.user.findMany({\n               orderBy: {\n                 createdAt: \"desc\",\n                 ~~~~~~~~~\n             ?   id?: SortOrder,\n             ?   user_id?: SortOrder,\n             ?   name?: SortOrder,\n             ?   phone_numbers?: SortOrder,\n             ?   address?: SortOrder | SortOrderInput,\n             ?   date_added?: SortOrder,\n             ?   status?: SortOrder,\n             ?   date_activated?: SortOrder | SortOrderInput,\n             ?   school_id?: SortOrder,\n             ?   country_of_res_id?: SortOrder,\n             ?   emailVerified?: SortOrder | SortOrderInput,\n             ?   image?: SortOrder | SortOrderInput,\n             ?   imageObj?: SortOrder | SortOrderInput,\n             ?   password?: SortOrder | SortOrderInput,\n             ?   role?: SortOrder,\n             ?   isTwoFactorEnabled?: SortOrder,\n             ?   school?: schoolOrderByWithRelationInput,\n             ?   country?: countryOrderByWithRelationInput,\n             ?   accounts?: AccountOrderByRelationAggregateInput,\n             ?   twoFactorConfirmation?: TwoFactorConfirmationOrderByWithRelationInput,\n             ?   user_employment?: user_employmentOrderByRelationAggregateInput,\n             ?   user_education?: user_educationOrderByRelationAggregateInput,\n             ?   user_certificate?: user_certificateOrderByRelationAggregateInput\n               }\n             })\n\nUnknown argument `createdAt`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.user.findMany()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/UserDB.js:64:45\n\n  61    \n  62 return new Promise(async (resolve, reject) => {\n  63     try {\n→ 64         const users = await prisma.user.findMany({\n               orderBy: {\n                 createdAt: \"desc\",\n                 ~~~~~~~~~\n             ?   id?: SortOrder,\n             ?   user_id?: SortOrder,\n             ?   name?: SortOrder,\n             ?   phone_numbers?: SortOrder,\n             ?   address?: SortOrder | SortOrderInput,\n             ?   date_added?: SortOrder,\n             ?   status?: SortOrder,\n             ?   date_activated?: SortOrder | SortOrderInput,\n             ?   school_id?: SortOrder,\n             ?   country_of_res_id?: SortOrder,\n             ?   emailVerified?: SortOrder | SortOrderInput,\n             ?   image?: SortOrder | SortOrderInput,\n             ?   imageObj?: SortOrder | SortOrderInput,\n             ?   password?: SortOrder | SortOrderInput,\n             ?   role?: SortOrder,\n             ?   isTwoFactorEnabled?: SortOrder,\n             ?   school?: schoolOrderByWithRelationInput,\n             ?   country?: countryOrderByWithRelationInput,\n             ?   accounts?: AccountOrderByRelationAggregateInput,\n             ?   twoFactorConfirmation?: TwoFactorConfirmationOrderByWithRelationInput,\n             ?   user_employment?: user_employmentOrderByRelationAggregateInput,\n             ?   user_education?: user_educationOrderByRelationAggregateInput,\n             ?   user_certificate?: user_certificateOrderByRelationAggregateInput\n               }\n             })\n\nUnknown argument `createdAt`. Available options are marked with ?.\n    at ti (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:118:5888)\n    at si.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:125:6473)\n    at si.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:125:6151)\n    at si.request (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:125:5859)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:130:9805)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/UserDB.js:64:27"}
{"label":"Exact health api logs","level":"error","message":"\nInvalid `prisma.user.findMany()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/UserDB.js:64:45\n\n  61    \n  62 return new Promise(async (resolve, reject) => {\n  63     try {\n→ 64         const users = await prisma.user.findMany({\n               orderBy: {\n                 createdAt: \"desc\",\n                 ~~~~~~~~~\n             ?   id?: SortOrder,\n             ?   user_id?: SortOrder,\n             ?   name?: SortOrder,\n             ?   phone_numbers?: SortOrder,\n             ?   address?: SortOrder | SortOrderInput,\n             ?   date_added?: SortOrder,\n             ?   status?: SortOrder,\n             ?   date_activated?: SortOrder | SortOrderInput,\n             ?   school_id?: SortOrder,\n             ?   country_of_res_id?: SortOrder,\n             ?   emailVerified?: SortOrder | SortOrderInput,\n             ?   image?: SortOrder | SortOrderInput,\n             ?   imageObj?: SortOrder | SortOrderInput,\n             ?   password?: SortOrder | SortOrderInput,\n             ?   role?: SortOrder,\n             ?   isTwoFactorEnabled?: SortOrder,\n             ?   school?: schoolOrderByWithRelationInput,\n             ?   country?: countryOrderByWithRelationInput,\n             ?   accounts?: AccountOrderByRelationAggregateInput,\n             ?   twoFactorConfirmation?: TwoFactorConfirmationOrderByWithRelationInput,\n             ?   user_employment?: user_employmentOrderByRelationAggregateInput,\n             ?   user_education?: user_educationOrderByRelationAggregateInput,\n             ?   user_certificate?: user_certificateOrderByRelationAggregateInput\n               }\n             })\n\nUnknown argument `createdAt`. Available options are marked with ?."}
{"content_length":"1779","label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1862.358,"status":500,"url":"/alumini/api/v1/testapi"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"content_length":"2","label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2654.425,"status":200,"url":"/alumini/api/v1/testapi"}
{"label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2065.119,"status":304,"url":"/alumini/api/v1/testapi"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2262.538,"status":304,"url":"/alumini/api/v1/testapi"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2095.178,"status":304,"url":"/alumini/api/v1/testapi"}
{"label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2041.622,"status":304,"url":"/alumini/api/v1/testapi"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2333.524,"status":304,"url":"/alumini/api/v1/testapi"}
