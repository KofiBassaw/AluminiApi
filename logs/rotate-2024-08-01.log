{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"info","message":"Success"}
{"content_length":"5127","label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":3916.092,"status":200,"url":"/alumini/api/v1/setup/allCountriesWithSchool"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"info","message":"Session has expired"}
{"content_length":"45","label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":2519.303,"status":200,"url":"/alumini/api/v1/Job/addJob"}
{"clientVersion":"5.15.0","label":"Exact health api logs","level":"error","message":"\nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create({\n                data: {\n                  jobTitle: \"Front end developer\",\n                  country_id: \"2ff3d1d2-a125-49f2-a2c0-1c0a301c854c\",\n                  jobType: \"Full time\",\n                  jobCategory: \"Software Engineering\",\n                  currency: \"GHS\",\n                  ~~~~~~~~\n                  minimumSalary: 5000,\n                  maximumSalary: 10000,\n                  location: \"Accra\",\n                  infomation: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has\",\n                  description: [\n                    \"description 1 sample details\",\n                    \"description 2\",\n                    \"more descriptions for testing\"\n                  ],\n                  sepcification: [\n                    \"Specification 1\",\n                    \"sample specifications to take note of\",\n                    \"short specification\"\n                  ],\n              ?   id?: Int,\n              ?   job_id?: String,\n              ?   status?: Int,\n              ?   numberOfApplication?: Int,\n              ?   numberOfConfirmation?: Int,\n              ?   numberOfPending?: Int,\n              ?   numberOfDeclined?: Int,\n              ?   date_added?: DateTime,\n              ?   applications?: userJobApplicationsUncheckedCreateNestedManyWithoutJobInput\n                }\n              })\n\nUnknown argument `currency`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create({\n                data: {\n                  jobTitle: \"Front end developer\",\n                  country_id: \"2ff3d1d2-a125-49f2-a2c0-1c0a301c854c\",\n                  jobType: \"Full time\",\n                  jobCategory: \"Software Engineering\",\n                  currency: \"GHS\",\n                  ~~~~~~~~\n                  minimumSalary: 5000,\n                  maximumSalary: 10000,\n                  location: \"Accra\",\n                  infomation: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has\",\n                  description: [\n                    \"description 1 sample details\",\n                    \"description 2\",\n                    \"more descriptions for testing\"\n                  ],\n                  sepcification: [\n                    \"Specification 1\",\n                    \"sample specifications to take note of\",\n                    \"short specification\"\n                  ],\n              ?   id?: Int,\n              ?   job_id?: String,\n              ?   status?: Int,\n              ?   numberOfApplication?: Int,\n              ?   numberOfConfirmation?: Int,\n              ?   numberOfPending?: Int,\n              ?   numberOfDeclined?: Int,\n              ?   date_added?: DateTime,\n              ?   applications?: userJobApplicationsUncheckedCreateNestedManyWithoutJobInput\n                }\n              })\n\nUnknown argument `currency`. Available options are marked with ?.\n    at Tn (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:115:6855)\n    at In.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:6533)\n    at In.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:6211)\n    at In.request (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:5919)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:127:11167)\n    at async ussd.creatJob (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:24)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/controllers/JobSetUp.js:14:17"}
{"label":"Exact health api logs","level":"error","message":"\nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create({\n                data: {\n                  jobTitle: \"Front end developer\",\n                  country_id: \"2ff3d1d2-a125-49f2-a2c0-1c0a301c854c\",\n                  jobType: \"Full time\",\n                  jobCategory: \"Software Engineering\",\n                  currency: \"GHS\",\n                  ~~~~~~~~\n                  minimumSalary: 5000,\n                  maximumSalary: 10000,\n                  location: \"Accra\",\n                  infomation: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has\",\n                  description: [\n                    \"description 1 sample details\",\n                    \"description 2\",\n                    \"more descriptions for testing\"\n                  ],\n                  sepcification: [\n                    \"Specification 1\",\n                    \"sample specifications to take note of\",\n                    \"short specification\"\n                  ],\n              ?   id?: Int,\n              ?   job_id?: String,\n              ?   status?: Int,\n              ?   numberOfApplication?: Int,\n              ?   numberOfConfirmation?: Int,\n              ?   numberOfPending?: Int,\n              ?   numberOfDeclined?: Int,\n              ?   date_added?: DateTime,\n              ?   applications?: userJobApplicationsUncheckedCreateNestedManyWithoutJobInput\n                }\n              })\n\nUnknown argument `currency`. Available options are marked with ?."}
{"content_length":"1943","label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":5447.202,"status":500,"url":"/alumini/api/v1/Job/addJob"}
{"clientVersion":"5.15.0","label":"Exact health api logs","level":"error","message":"\nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create({\n                data: {\n                  jobTitle: \"Front end developer\",\n                  country_id: \"2ff3d1d2-a125-49f2-a2c0-1c0a301c854c\",\n                  jobType: \"Full time\",\n                  jobCategory: \"Software Engineering\",\n                  currency: \"GHS\",\n                  ~~~~~~~~\n                  minimumSalary: 5000,\n                  maximumSalary: 10000,\n                  location: \"Accra\",\n                  infomation: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has\",\n                  description: [\n                    \"description 1 sample details\",\n                    \"description 2\",\n                    \"more descriptions for testing\"\n                  ],\n                  sepcification: [\n                    \"Specification 1\",\n                    \"sample specifications to take note of\",\n                    \"short specification\"\n                  ],\n              ?   id?: Int,\n              ?   job_id?: String,\n              ?   status?: Int,\n              ?   numberOfApplication?: Int,\n              ?   numberOfConfirmation?: Int,\n              ?   numberOfPending?: Int,\n              ?   numberOfDeclined?: Int,\n              ?   date_added?: DateTime,\n              ?   applications?: userJobApplicationsUncheckedCreateNestedManyWithoutJobInput\n                }\n              })\n\nUnknown argument `currency`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create({\n                data: {\n                  jobTitle: \"Front end developer\",\n                  country_id: \"2ff3d1d2-a125-49f2-a2c0-1c0a301c854c\",\n                  jobType: \"Full time\",\n                  jobCategory: \"Software Engineering\",\n                  currency: \"GHS\",\n                  ~~~~~~~~\n                  minimumSalary: 5000,\n                  maximumSalary: 10000,\n                  location: \"Accra\",\n                  infomation: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has\",\n                  description: [\n                    \"description 1 sample details\",\n                    \"description 2\",\n                    \"more descriptions for testing\"\n                  ],\n                  sepcification: [\n                    \"Specification 1\",\n                    \"sample specifications to take note of\",\n                    \"short specification\"\n                  ],\n              ?   id?: Int,\n              ?   job_id?: String,\n              ?   status?: Int,\n              ?   numberOfApplication?: Int,\n              ?   numberOfConfirmation?: Int,\n              ?   numberOfPending?: Int,\n              ?   numberOfDeclined?: Int,\n              ?   date_added?: DateTime,\n              ?   applications?: userJobApplicationsUncheckedCreateNestedManyWithoutJobInput\n                }\n              })\n\nUnknown argument `currency`. Available options are marked with ?.\n    at Tn (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:115:6855)\n    at In.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:6533)\n    at In.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:6211)\n    at In.request (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:5919)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:127:11167)\n    at async ussd.creatJob (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:24)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/controllers/JobSetUp.js:14:17"}
{"label":"Exact health api logs","level":"error","message":"\nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create({\n                data: {\n                  jobTitle: \"Front end developer\",\n                  country_id: \"2ff3d1d2-a125-49f2-a2c0-1c0a301c854c\",\n                  jobType: \"Full time\",\n                  jobCategory: \"Software Engineering\",\n                  currency: \"GHS\",\n                  ~~~~~~~~\n                  minimumSalary: 5000,\n                  maximumSalary: 10000,\n                  location: \"Accra\",\n                  infomation: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has\",\n                  description: [\n                    \"description 1 sample details\",\n                    \"description 2\",\n                    \"more descriptions for testing\"\n                  ],\n                  sepcification: [\n                    \"Specification 1\",\n                    \"sample specifications to take note of\",\n                    \"short specification\"\n                  ],\n              ?   id?: Int,\n              ?   job_id?: String,\n              ?   status?: Int,\n              ?   numberOfApplication?: Int,\n              ?   numberOfConfirmation?: Int,\n              ?   numberOfPending?: Int,\n              ?   numberOfDeclined?: Int,\n              ?   date_added?: DateTime,\n              ?   applications?: userJobApplicationsUncheckedCreateNestedManyWithoutJobInput\n                }\n              })\n\nUnknown argument `currency`. Available options are marked with ?."}
{"content_length":"1943","label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":5993.551,"status":500,"url":"/alumini/api/v1/Job/addJob"}
{"clientVersion":"5.15.0","label":"Exact health api logs","level":"error","message":"\nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create({\n                data: {\n                  jobTitle: \"Front end developer\",\n                  country_id: \"2ff3d1d2-a125-49f2-a2c0-1c0a301c854c\",\n                  jobType: \"Full time\",\n                  jobCategory: \"Software Engineering\",\n                  currency: \"GHS\",\n                  ~~~~~~~~\n                  minimumSalary: 5000,\n                  maximumSalary: 10000,\n                  location: \"Accra\",\n                  infomation: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has\",\n                  description: [\n                    \"description 1 sample details\",\n                    \"description 2\",\n                    \"more descriptions for testing\"\n                  ],\n                  sepcification: [\n                    \"Specification 1\",\n                    \"sample specifications to take note of\",\n                    \"short specification\"\n                  ],\n              ?   id?: Int,\n              ?   job_id?: String,\n              ?   status?: Int,\n              ?   numberOfApplication?: Int,\n              ?   numberOfConfirmation?: Int,\n              ?   numberOfPending?: Int,\n              ?   numberOfDeclined?: Int,\n              ?   date_added?: DateTime,\n              ?   applications?: userJobApplicationsUncheckedCreateNestedManyWithoutJobInput\n                }\n              })\n\nUnknown argument `currency`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create({\n                data: {\n                  jobTitle: \"Front end developer\",\n                  country_id: \"2ff3d1d2-a125-49f2-a2c0-1c0a301c854c\",\n                  jobType: \"Full time\",\n                  jobCategory: \"Software Engineering\",\n                  currency: \"GHS\",\n                  ~~~~~~~~\n                  minimumSalary: 5000,\n                  maximumSalary: 10000,\n                  location: \"Accra\",\n                  infomation: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has\",\n                  description: [\n                    \"description 1 sample details\",\n                    \"description 2\",\n                    \"more descriptions for testing\"\n                  ],\n                  sepcification: [\n                    \"Specification 1\",\n                    \"sample specifications to take note of\",\n                    \"short specification\"\n                  ],\n              ?   id?: Int,\n              ?   job_id?: String,\n              ?   status?: Int,\n              ?   numberOfApplication?: Int,\n              ?   numberOfConfirmation?: Int,\n              ?   numberOfPending?: Int,\n              ?   numberOfDeclined?: Int,\n              ?   date_added?: DateTime,\n              ?   applications?: userJobApplicationsUncheckedCreateNestedManyWithoutJobInput\n                }\n              })\n\nUnknown argument `currency`. Available options are marked with ?.\n    at Tn (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:115:6855)\n    at In.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:6533)\n    at In.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:6211)\n    at In.request (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:5919)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:127:11167)\n    at async ussd.creatJob (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:24)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/controllers/JobSetUp.js:14:17"}
{"label":"Exact health api logs","level":"error","message":"\nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create({\n                data: {\n                  jobTitle: \"Front end developer\",\n                  country_id: \"2ff3d1d2-a125-49f2-a2c0-1c0a301c854c\",\n                  jobType: \"Full time\",\n                  jobCategory: \"Software Engineering\",\n                  currency: \"GHS\",\n                  ~~~~~~~~\n                  minimumSalary: 5000,\n                  maximumSalary: 10000,\n                  location: \"Accra\",\n                  infomation: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has\",\n                  description: [\n                    \"description 1 sample details\",\n                    \"description 2\",\n                    \"more descriptions for testing\"\n                  ],\n                  sepcification: [\n                    \"Specification 1\",\n                    \"sample specifications to take note of\",\n                    \"short specification\"\n                  ],\n              ?   id?: Int,\n              ?   job_id?: String,\n              ?   status?: Int,\n              ?   numberOfApplication?: Int,\n              ?   numberOfConfirmation?: Int,\n              ?   numberOfPending?: Int,\n              ?   numberOfDeclined?: Int,\n              ?   date_added?: DateTime,\n              ?   applications?: userJobApplicationsUncheckedCreateNestedManyWithoutJobInput\n                }\n              })\n\nUnknown argument `currency`. Available options are marked with ?."}
{"content_length":"1943","label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":5693.828,"status":500,"url":"/alumini/api/v1/Job/addJob"}
{"clientVersion":"5.15.0","label":"Exact health api logs","level":"error","message":"\nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create({\n                data: {\n                  jobTitle: \"Front end developer\",\n                  country_id: \"2ff3d1d2-a125-49f2-a2c0-1c0a301c854c\",\n                  jobType: \"Full time\",\n                  jobCategory: \"Software Engineering\",\n                  currency: \"GHS\",\n                  ~~~~~~~~\n                  minimumSalary: 5000,\n                  maximumSalary: 10000,\n                  location: \"Accra\",\n                  infomation: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has\",\n                  description: [\n                    \"description 1 sample details\",\n                    \"description 2\",\n                    \"more descriptions for testing\"\n                  ],\n                  sepcification: [\n                    \"Specification 1\",\n                    \"sample specifications to take note of\",\n                    \"short specification\"\n                  ],\n              ?   id?: Int,\n              ?   job_id?: String,\n              ?   status?: Int,\n              ?   numberOfApplication?: Int,\n              ?   numberOfConfirmation?: Int,\n              ?   numberOfPending?: Int,\n              ?   numberOfDeclined?: Int,\n              ?   date_added?: DateTime,\n              ?   applications?: userJobApplicationsUncheckedCreateNestedManyWithoutJobInput\n                }\n              })\n\nUnknown argument `currency`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create({\n                data: {\n                  jobTitle: \"Front end developer\",\n                  country_id: \"2ff3d1d2-a125-49f2-a2c0-1c0a301c854c\",\n                  jobType: \"Full time\",\n                  jobCategory: \"Software Engineering\",\n                  currency: \"GHS\",\n                  ~~~~~~~~\n                  minimumSalary: 5000,\n                  maximumSalary: 10000,\n                  location: \"Accra\",\n                  infomation: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has\",\n                  description: [\n                    \"description 1 sample details\",\n                    \"description 2\",\n                    \"more descriptions for testing\"\n                  ],\n                  sepcification: [\n                    \"Specification 1\",\n                    \"sample specifications to take note of\",\n                    \"short specification\"\n                  ],\n              ?   id?: Int,\n              ?   job_id?: String,\n              ?   status?: Int,\n              ?   numberOfApplication?: Int,\n              ?   numberOfConfirmation?: Int,\n              ?   numberOfPending?: Int,\n              ?   numberOfDeclined?: Int,\n              ?   date_added?: DateTime,\n              ?   applications?: userJobApplicationsUncheckedCreateNestedManyWithoutJobInput\n                }\n              })\n\nUnknown argument `currency`. Available options are marked with ?.\n    at Tn (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:115:6855)\n    at In.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:6533)\n    at In.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:6211)\n    at In.request (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:5919)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:127:11167)\n    at async ussd.creatJob (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:24)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/controllers/JobSetUp.js:14:17"}
{"label":"Exact health api logs","level":"error","message":"\nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create({\n                data: {\n                  jobTitle: \"Front end developer\",\n                  country_id: \"2ff3d1d2-a125-49f2-a2c0-1c0a301c854c\",\n                  jobType: \"Full time\",\n                  jobCategory: \"Software Engineering\",\n                  currency: \"GHS\",\n                  ~~~~~~~~\n                  minimumSalary: 5000,\n                  maximumSalary: 10000,\n                  location: \"Accra\",\n                  infomation: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has\",\n                  description: [\n                    \"description 1 sample details\",\n                    \"description 2\",\n                    \"more descriptions for testing\"\n                  ],\n                  sepcification: [\n                    \"Specification 1\",\n                    \"sample specifications to take note of\",\n                    \"short specification\"\n                  ],\n              ?   id?: Int,\n              ?   job_id?: String,\n              ?   status?: Int,\n              ?   numberOfApplication?: Int,\n              ?   numberOfConfirmation?: Int,\n              ?   numberOfPending?: Int,\n              ?   numberOfDeclined?: Int,\n              ?   date_added?: DateTime,\n              ?   applications?: userJobApplicationsUncheckedCreateNestedManyWithoutJobInput\n                }\n              })\n\nUnknown argument `currency`. Available options are marked with ?."}
{"content_length":"1943","label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":5804.118,"status":500,"url":"/alumini/api/v1/Job/addJob"}
{"clientVersion":"5.15.0","label":"Exact health api logs","level":"error","message":"\nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create({\n                data: {\n                  jobTitle: \"Front end developer\",\n                  country_id: \"2ff3d1d2-a125-49f2-a2c0-1c0a301c854c\",\n                  jobType: \"Full time\",\n                  jobCategory: \"Software Engineering\",\n                  salaryCurrency: \"GHS\",\n                  ~~~~~~~~~~~~~~\n                  minimumSalary: 5000,\n                  maximumSalary: 10000,\n                  location: \"Accra\",\n                  infomation: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has\",\n                  description: [\n                    \"description 1 sample details\",\n                    \"description 2\",\n                    \"more descriptions for testing\"\n                  ],\n                  sepcification: [\n                    \"Specification 1\",\n                    \"sample specifications to take note of\",\n                    \"short specification\"\n                  ],\n              ?   id?: Int,\n              ?   job_id?: String,\n              ?   status?: Int,\n              ?   numberOfApplication?: Int,\n              ?   numberOfConfirmation?: Int,\n              ?   numberOfPending?: Int,\n              ?   numberOfDeclined?: Int,\n              ?   date_added?: DateTime,\n              ?   applications?: userJobApplicationsUncheckedCreateNestedManyWithoutJobInput\n                }\n              })\n\nUnknown argument `salaryCurrency`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create({\n                data: {\n                  jobTitle: \"Front end developer\",\n                  country_id: \"2ff3d1d2-a125-49f2-a2c0-1c0a301c854c\",\n                  jobType: \"Full time\",\n                  jobCategory: \"Software Engineering\",\n                  salaryCurrency: \"GHS\",\n                  ~~~~~~~~~~~~~~\n                  minimumSalary: 5000,\n                  maximumSalary: 10000,\n                  location: \"Accra\",\n                  infomation: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has\",\n                  description: [\n                    \"description 1 sample details\",\n                    \"description 2\",\n                    \"more descriptions for testing\"\n                  ],\n                  sepcification: [\n                    \"Specification 1\",\n                    \"sample specifications to take note of\",\n                    \"short specification\"\n                  ],\n              ?   id?: Int,\n              ?   job_id?: String,\n              ?   status?: Int,\n              ?   numberOfApplication?: Int,\n              ?   numberOfConfirmation?: Int,\n              ?   numberOfPending?: Int,\n              ?   numberOfDeclined?: Int,\n              ?   date_added?: DateTime,\n              ?   applications?: userJobApplicationsUncheckedCreateNestedManyWithoutJobInput\n                }\n              })\n\nUnknown argument `salaryCurrency`. Available options are marked with ?.\n    at Tn (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:115:6855)\n    at In.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:6533)\n    at In.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:6211)\n    at In.request (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:5919)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:127:11167)\n    at async ussd.creatJob (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:24)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/controllers/JobSetUp.js:14:17"}
{"label":"Exact health api logs","level":"error","message":"\nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create({\n                data: {\n                  jobTitle: \"Front end developer\",\n                  country_id: \"2ff3d1d2-a125-49f2-a2c0-1c0a301c854c\",\n                  jobType: \"Full time\",\n                  jobCategory: \"Software Engineering\",\n                  salaryCurrency: \"GHS\",\n                  ~~~~~~~~~~~~~~\n                  minimumSalary: 5000,\n                  maximumSalary: 10000,\n                  location: \"Accra\",\n                  infomation: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has\",\n                  description: [\n                    \"description 1 sample details\",\n                    \"description 2\",\n                    \"more descriptions for testing\"\n                  ],\n                  sepcification: [\n                    \"Specification 1\",\n                    \"sample specifications to take note of\",\n                    \"short specification\"\n                  ],\n              ?   id?: Int,\n              ?   job_id?: String,\n              ?   status?: Int,\n              ?   numberOfApplication?: Int,\n              ?   numberOfConfirmation?: Int,\n              ?   numberOfPending?: Int,\n              ?   numberOfDeclined?: Int,\n              ?   date_added?: DateTime,\n              ?   applications?: userJobApplicationsUncheckedCreateNestedManyWithoutJobInput\n                }\n              })\n\nUnknown argument `salaryCurrency`. Available options are marked with ?."}
{"content_length":"1961","label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":5770.857,"status":500,"url":"/alumini/api/v1/Job/addJob"}
{"clientVersion":"5.15.0","label":"Exact health api logs","level":"error","message":"\nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create({\n                data: {\n                  jobTitle: \"Front end developer\",\n                  country_id: \"2ff3d1d2-a125-49f2-a2c0-1c0a301c854c\",\n                  jobType: \"Full time\",\n                  jobCategory: \"Software Engineering\",\n                  minimumSalary: 5000,\n                  maximumSalary: 10000,\n                  location: \"Accra\",\n                  infomation: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has\",\n                  description: [\n                    \"description 1 sample details\",\n                    \"description 2\",\n                    \"more descriptions for testing\"\n                  ],\n                  sepcification: [\n                    \"Specification 1\",\n                    \"sample specifications to take note of\",\n                    \"short specification\"\n                  ],\n                  salaryCurrency: \"GHS\",\n                  ~~~~~~~~~~~~~~\n              ?   id?: Int,\n              ?   job_id?: String,\n              ?   status?: Int,\n              ?   numberOfApplication?: Int,\n              ?   numberOfConfirmation?: Int,\n              ?   numberOfPending?: Int,\n              ?   numberOfDeclined?: Int,\n              ?   date_added?: DateTime,\n              ?   applications?: userJobApplicationsUncheckedCreateNestedManyWithoutJobInput\n                }\n              })\n\nUnknown argument `salaryCurrency`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create({\n                data: {\n                  jobTitle: \"Front end developer\",\n                  country_id: \"2ff3d1d2-a125-49f2-a2c0-1c0a301c854c\",\n                  jobType: \"Full time\",\n                  jobCategory: \"Software Engineering\",\n                  minimumSalary: 5000,\n                  maximumSalary: 10000,\n                  location: \"Accra\",\n                  infomation: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has\",\n                  description: [\n                    \"description 1 sample details\",\n                    \"description 2\",\n                    \"more descriptions for testing\"\n                  ],\n                  sepcification: [\n                    \"Specification 1\",\n                    \"sample specifications to take note of\",\n                    \"short specification\"\n                  ],\n                  salaryCurrency: \"GHS\",\n                  ~~~~~~~~~~~~~~\n              ?   id?: Int,\n              ?   job_id?: String,\n              ?   status?: Int,\n              ?   numberOfApplication?: Int,\n              ?   numberOfConfirmation?: Int,\n              ?   numberOfPending?: Int,\n              ?   numberOfDeclined?: Int,\n              ?   date_added?: DateTime,\n              ?   applications?: userJobApplicationsUncheckedCreateNestedManyWithoutJobInput\n                }\n              })\n\nUnknown argument `salaryCurrency`. Available options are marked with ?.\n    at Tn (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:115:6855)\n    at In.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:6533)\n    at In.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:6211)\n    at In.request (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:5919)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:127:11167)\n    at async ussd.creatJob (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:24)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/controllers/JobSetUp.js:14:17"}
{"label":"Exact health api logs","level":"error","message":"\nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create({\n                data: {\n                  jobTitle: \"Front end developer\",\n                  country_id: \"2ff3d1d2-a125-49f2-a2c0-1c0a301c854c\",\n                  jobType: \"Full time\",\n                  jobCategory: \"Software Engineering\",\n                  minimumSalary: 5000,\n                  maximumSalary: 10000,\n                  location: \"Accra\",\n                  infomation: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has\",\n                  description: [\n                    \"description 1 sample details\",\n                    \"description 2\",\n                    \"more descriptions for testing\"\n                  ],\n                  sepcification: [\n                    \"Specification 1\",\n                    \"sample specifications to take note of\",\n                    \"short specification\"\n                  ],\n                  salaryCurrency: \"GHS\",\n                  ~~~~~~~~~~~~~~\n              ?   id?: Int,\n              ?   job_id?: String,\n              ?   status?: Int,\n              ?   numberOfApplication?: Int,\n              ?   numberOfConfirmation?: Int,\n              ?   numberOfPending?: Int,\n              ?   numberOfDeclined?: Int,\n              ?   date_added?: DateTime,\n              ?   applications?: userJobApplicationsUncheckedCreateNestedManyWithoutJobInput\n                }\n              })\n\nUnknown argument `salaryCurrency`. Available options are marked with ?."}
{"content_length":"1961","label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":6398.337,"status":500,"url":"/alumini/api/v1/Job/addJob"}
{"clientVersion":"5.15.0","code":"P2011","label":"Exact health api logs","level":"error","message":"\nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create(\nNull constraint violation on the fields: (`salaryCurrency`)","meta":{"constraint":["salaryCurrency"],"modelName":"Job"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create(\nNull constraint violation on the fields: (`salaryCurrency`)\n    at In.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:6877)\n    at In.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:6211)\n    at In.request (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:5919)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:127:11167)\n    at async ussd.creatJob (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:24)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/controllers/JobSetUp.js:14:17"}
{"label":"Exact health api logs","level":"error","message":"\nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create(\nNull constraint violation on the fields: (`salaryCurrency`)"}
{"content_length":"341","label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":6954.025,"status":500,"url":"/alumini/api/v1/Job/addJob"}
{"clientVersion":"5.15.0","label":"Exact health api logs","level":"error","message":"\nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create({\n                data: {\n                  jobTitle: \"Front end developer\",\n                  country_id: \"2ff3d1d2-a125-49f2-a2c0-1c0a301c854c\",\n                  jobType: \"Full time\",\n                  jobCategory: \"Software Engineering\",\n                  minimumSalary: 5000,\n                  maximumSalary: 10000,\n                  location: \"Accra\",\n                  infomation: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has\",\n                  description: [\n                    \"description 1 sample details\",\n                    \"description 2\",\n                    \"more descriptions for testing\"\n                  ],\n                  sepcification: [\n                    \"Specification 1\",\n                    \"sample specifications to take note of\",\n                    \"short specification\"\n                  ],\n                  salaryCurrency: \"GHS\",\n                  ~~~~~~~~~~~~~~\n              ?   id?: Int,\n              ?   job_id?: String,\n              ?   status?: Int,\n              ?   numberOfApplication?: Int,\n              ?   numberOfConfirmation?: Int,\n              ?   numberOfPending?: Int,\n              ?   numberOfDeclined?: Int,\n              ?   date_added?: DateTime,\n              ?   applications?: userJobApplicationsUncheckedCreateNestedManyWithoutJobInput\n                }\n              })\n\nUnknown argument `salaryCurrency`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create({\n                data: {\n                  jobTitle: \"Front end developer\",\n                  country_id: \"2ff3d1d2-a125-49f2-a2c0-1c0a301c854c\",\n                  jobType: \"Full time\",\n                  jobCategory: \"Software Engineering\",\n                  minimumSalary: 5000,\n                  maximumSalary: 10000,\n                  location: \"Accra\",\n                  infomation: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has\",\n                  description: [\n                    \"description 1 sample details\",\n                    \"description 2\",\n                    \"more descriptions for testing\"\n                  ],\n                  sepcification: [\n                    \"Specification 1\",\n                    \"sample specifications to take note of\",\n                    \"short specification\"\n                  ],\n                  salaryCurrency: \"GHS\",\n                  ~~~~~~~~~~~~~~\n              ?   id?: Int,\n              ?   job_id?: String,\n              ?   status?: Int,\n              ?   numberOfApplication?: Int,\n              ?   numberOfConfirmation?: Int,\n              ?   numberOfPending?: Int,\n              ?   numberOfDeclined?: Int,\n              ?   date_added?: DateTime,\n              ?   applications?: userJobApplicationsUncheckedCreateNestedManyWithoutJobInput\n                }\n              })\n\nUnknown argument `salaryCurrency`. Available options are marked with ?.\n    at Tn (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:115:6855)\n    at In.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:6533)\n    at In.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:6211)\n    at In.request (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:122:5919)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/@prisma/client/runtime/library.js:127:11167)\n    at async ussd.creatJob (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:24)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/controllers/JobSetUp.js:14:17"}
{"label":"Exact health api logs","level":"error","message":"\nInvalid `prisma.job.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/DBFunctions/JobDb.js:113:41\n\n  110 \n  111 ussd.creatJob = async (job) => {\n  112     try {\n→ 113         const newJob = await prisma.job.create({\n                data: {\n                  jobTitle: \"Front end developer\",\n                  country_id: \"2ff3d1d2-a125-49f2-a2c0-1c0a301c854c\",\n                  jobType: \"Full time\",\n                  jobCategory: \"Software Engineering\",\n                  minimumSalary: 5000,\n                  maximumSalary: 10000,\n                  location: \"Accra\",\n                  infomation: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has\",\n                  description: [\n                    \"description 1 sample details\",\n                    \"description 2\",\n                    \"more descriptions for testing\"\n                  ],\n                  sepcification: [\n                    \"Specification 1\",\n                    \"sample specifications to take note of\",\n                    \"short specification\"\n                  ],\n                  salaryCurrency: \"GHS\",\n                  ~~~~~~~~~~~~~~\n              ?   id?: Int,\n              ?   job_id?: String,\n              ?   status?: Int,\n              ?   numberOfApplication?: Int,\n              ?   numberOfConfirmation?: Int,\n              ?   numberOfPending?: Int,\n              ?   numberOfDeclined?: Int,\n              ?   date_added?: DateTime,\n              ?   applications?: userJobApplicationsUncheckedCreateNestedManyWithoutJobInput\n                }\n              })\n\nUnknown argument `salaryCurrency`. Available options are marked with ?."}
{"content_length":"1961","label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":6204.619,"status":500,"url":"/alumini/api/v1/Job/addJob"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"error","message":"NewContinent is not defined"}
{"content_length":"52","label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":5795.625,"status":500,"url":"/alumini/api/v1/Job/addJob"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"info","message":"Success"}
{"content_length":"931","label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":5989.91,"status":200,"url":"/alumini/api/v1/Job/addJob"}
{"code":"3D000","file":"postinit.c","label":"Exact health api logs","length":93,"level":"error","line":"1021","message":"database \"alumini\" does not exist","name":"error","routine":"InitPostgres","severity":"FATAL","stack":"error: database \"alumini\" does not exist\n    at Parser.parseErrorMessage (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/pg-protocol/dist/parser.js:283:98)\n    at Parser.handlePacket (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/pg-protocol/dist/parser.js:122:29)\n    at Parser.parse (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/pg-protocol/dist/parser.js:35:38)\n    at Socket.<anonymous> (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:519:28)\n    at addChunk (node:internal/streams/readable:559:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n    at Readable.push (node:internal/streams/readable:390:5)\n    at TCP.onStreamRead (node:internal/stream_base_commons:191:23)"}
{"label":"Exact health api logs","level":"error","message":"database \"alumini\" does not exist"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"debug","message":"Alumini App: Running in development mode and listening on port http://:9004"}
{"label":"Exact health api logs","level":"info","message":"Success"}
{"content_length":"1175","label":"Exact health api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":6834.685,"status":200,"url":"/alumini/api/v1/Job/allJobs"}
{"code":"3D000","file":"postinit.c","label":"Exact health api logs","length":93,"level":"error","line":"1021","message":"database \"alumini\" does not exist","name":"error","routine":"InitPostgres","severity":"FATAL","stack":"error: database \"alumini\" does not exist\n    at Parser.parseErrorMessage (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/pg-protocol/dist/parser.js:283:98)\n    at Parser.handlePacket (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/pg-protocol/dist/parser.js:122:29)\n    at Parser.parse (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/pg-protocol/dist/parser.js:35:38)\n    at Socket.<anonymous> (/Users/testdevice/Desktop/Source Code/Node JS/AluminiApi/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:519:28)\n    at addChunk (node:internal/streams/readable:559:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n    at Readable.push (node:internal/streams/readable:390:5)\n    at TCP.onStreamRead (node:internal/stream_base_commons:191:23)"}
{"label":"Exact health api logs","level":"error","message":"database \"alumini\" does not exist"}
